services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=OrderManagementDB;Username=postgres;Password=postgres123;
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - order-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: order-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,info}] disk_free_limit 2147483648
    ports:
      - "5672:5672"     # Puerto para conexiones AMQP
      - "15672:15672"   # Puerto para panel de administración
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - order-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: postgres
    networks:
      - order-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: OrderManagementDB
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d OrderManagementDB"]
      interval: 30s
      timeout: 10s
      retries: 5

# Definición de redes
networks:
  order-network:
    driver: bridge

# Definición de volúmenes
volumes:
  postgres-data:
  rabbitmq_data: