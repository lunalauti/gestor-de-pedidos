
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASS}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - order-network


  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: postgres
    networks:
      - order-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: OrderManagementDB
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d OrderManagementDB"]
      interval: 30s
      timeout: 10s
      retries: 5

# Definición de redes
networks:
  order-network:
    driver: bridge

# Definición de volúmenes
volumes:
  postgres-data:
  rabbitmq_data:
